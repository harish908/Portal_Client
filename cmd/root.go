package cmd

import (
	"net/http"
	"time"

	"github.com/harish908/Portal_Client/pkg/tracing"

	"github.com/harish908/Portal_Client/pkg/middleware"

	_ "github.com/harish908/Portal_Client/docs" // docs is generated by Swag CLI

	"github.com/gorilla/mux"
	log "github.com/sirupsen/logrus"
	httpSwagger "github.com/swaggo/http-swagger"
)

func Execute() error {
	if err := Init(); err != nil {
		return err
	}

	// route handler
	router := mux.NewRouter().StrictSlash(true)
	router.Use(middleware.LoggingMiddleware)
	HandleRoutes(router)

	// Swagger UI
	router.PathPrefix("/swagger").Handler(httpSwagger.WrapHandler)

	// Create and start server
	log.Info("PortalClient starting")
	srv := &http.Server{
		Handler: router,
		Addr:    "127.0.0.1:8000",
		// Good practice to set timeouts to avoid Slowloris attacks.
		WriteTimeout: time.Second * 15,
		ReadTimeout:  time.Second * 15,
		IdleTimeout:  time.Second * 60,
	}
	if err := srv.ListenAndServe(); err != nil {
		return err
	}

	// Close tracer
	defer tracing.CloseTracer()

	return nil
}
